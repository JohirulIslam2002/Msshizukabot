from telethon import TelegramClient, events, Button
import asyncio
from datetime import datetime, timedelta
import pytz

# ========== ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ==========
API_ID = 22543888  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ API_ID
API_HASH = 'b2c46c23f8d4d7defea5f97bd31be085'  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ API_HASH
BOT_TOKEN = '8066991836:AAEL5eLrrg80fSn3ERFax4PHbjnN77ByGJs'  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Bot Token

SOURCE_CHANNEL_ID = -1002599155469  # ‡¶∏‡ßã‡¶∞‡ßç‡¶∏ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶Ü‡¶á‡¶°‡¶ø
TARGET_CHANNEL_ID = -1002194172569  # ‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶Ü‡¶á‡¶°‡¶ø
CHANNEL_LINK = 'https://t.me/MrCocoMusic'  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá‡¶∞ ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï
OWNER_USERNAME = 'TopMasterBd'  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶®‡ßá‡¶Æ
OWNER_ID = 6513525964  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶Ü‡¶á‡¶°‡¶ø (‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶™‡¶æ‡¶¨‡ßá)

# ========== ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶∏‡ßá‡¶ü‡¶æ‡¶™ ==========
join_count = 0
leave_count = 0

# ========== ‡¶ï‡ßç‡¶≤‡¶æ‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡ßá‡¶ü‡¶æ‡¶™ ==========
client = TelegramClient('bot', API_ID, API_HASH).start(bot_token=BOT_TOKEN)

# ========== Start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶ì ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ==========
@client.on(events.NewMessage())
async def start(event):
    if event.is_private:
        if event.sender_id == OWNER_ID:
            # Owner ‡¶π‡¶≤‡ßá ‡¶∏‡¶¨ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶ö‡¶≤‡¶¨‡ßá
            pass
        else:
            # ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßá‡¶â ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¶‡¶ø‡¶≤‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶ì‡ßü‡ßá‡¶≤‡¶ï‡¶æ‡¶Æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ø‡¶æ‡¶¨‡ßá
            buttons = [
                [Button.url("‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶ú‡ßü‡ßá‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®", CHANNEL_LINK)],
                [Button.url("‡¶¨‡¶ü ‡¶¨‡¶æ‡¶®‡¶æ‡¶§‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®", f"https://t.me/{OWNER_USERNAME}")]
            ]
            welcome_text = f"""
‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ {event.sender.first_name}!

‚úÖ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶ú‡ßü‡ßá‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶™‡ßá‡¶§‡ßá‡•§
‚úÖ ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶Æ‡¶® ‡¶¨‡¶ü ‡¶¨‡¶æ‡¶®‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶®, ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá‡•§

‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶!
"""
            await event.respond(welcome_text, buttons=buttons)

# ========== ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶ú‡ßü‡ßá‡¶® ‡¶π‡¶≤‡ßá ==========
@client.on(events.ChatAction(chats=TARGET_CHANNEL_ID))
async def member_update(event):
    global join_count, leave_count

    if event.user_joined or event.user_added:
        join_count += 1
        new_member = await event.get_user()
        username = new_member.username or new_member.first_name

        # ‡¶∏‡ßã‡¶∞‡ßç‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
        async for message in client.iter_messages(SOURCE_CHANNEL_ID, limit=100):
            if message.video:
                await client.send_file(
                    TARGET_CHANNEL_ID,
                    message.file,
                    caption=None
                )
                break

        # ‡¶Æ‡ßá‡¶®‡¶∂‡¶®‡¶∏‡¶π ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü
        mention_text = f"@{username} ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶ú‡ßü‡ßá‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø!\n‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶Ü‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£ ‡¶ú‡¶æ‡¶®‡¶æ‡¶ì ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßá‡¶§‡ßá!"

        buttons = [
            [Button.url("‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶Ü‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£ ‡¶ú‡¶æ‡¶®‡¶æ‡¶®", CHANNEL_LINK)]
        ]

        sent_message = await client.send_message(
            TARGET_CHANNEL_ID,
            mention_text,
            buttons=buttons
        )

        await asyncio.sleep(30)
        await client.delete_messages(TARGET_CHANNEL_ID, [sent_message.id])

    elif event.user_left or event.user_kicked:
        leave_count += 1

# ========== ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ Join Request Auto Approve ==========
@client.on(events.ChatActionRequest())
async def auto_approve(event):
    await event.approve()

# ========== ‡¶∞‡¶æ‡¶§ ‡ßß‡ß®‡¶ü‡¶æ‡ßü Owner ‡¶ï‡ßá ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ==========
async def send_daily_report():
    await client.connect()
    while True:
        now = datetime.now(pytz.timezone('Asia/Dhaka'))
        if now.hour == 0 and now.minute == 0:  # ‡¶∞‡¶æ‡¶§ ‡ßß‡ß®:‡ß¶‡ß¶
            entity = await client.get_entity(TARGET_CHANNEL_ID)
            members = await client.get_participants(entity)
            total_members = len(members)

            report_text = f"""
‚ú® ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü:

‚ûï ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø: {join_count}
‚ûñ ‡¶π‡¶æ‡¶∞‡¶æ‡¶®‡ßã ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø: {leave_count}
üë• ‡¶Æ‡ßã‡¶ü ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ: {total_members}

-- ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶¨‡¶ü
"""

            await client.send_message(OWNER_ID, report_text)

            # ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü
            global join_count, leave_count
            join_count = 0
            leave_count = 0

        await asyncio.sleep(60)  # ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá

# ========== ‡¶∞‡¶æ‡¶® ==========
async def main():
    await asyncio.gather(
        client.start(),
        send_daily_report()
    )

client.loop.run_until_complete(main())
